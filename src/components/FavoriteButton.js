// src/components/FavoriteButton.js
"use client";

import { useState, useTransition } from 'react';

export default function FavoriteButton({ songId, initialIsFavorited }) {
  const [isFavorited, setIsFavorited] = useState(initialIsFavorited);
  const [isPending, startTransition] = useTransition();

  const handleFavorite = async () => {
    // N·∫øu ch∆∞a y√™u th√≠ch, th·ª±c hi·ªán h√†nh ƒë·ªông "th√™m"
    if (!isFavorited) {
      setIsFavorited(true); // C·∫≠p nh·∫≠t giao di·ªán ngay l·∫≠p t·ª©c
      startTransition(async () => {
        const res = await fetch(`/api/user/favorites/${songId}`, { method: 'POST' });
        if (!res.ok) {
          // N·∫øu c√≥ l·ªói, tr·∫£ l·∫°i tr·∫°ng th√°i c≈©
          setIsFavorited(false); 
          alert("C√≥ l·ªói x·∫£y ra, vui l√≤ng th·ª≠ l·∫°i.");
        }
      });
    } else { // N·∫øu ƒë√£ y√™u th√≠ch, th·ª±c hi·ªán h√†nh ƒë·ªông "x√≥a"
      setIsFavorited(false); // C·∫≠p nh·∫≠t giao di·ªán ngay l·∫≠p t·ª©c
      startTransition(async () => {
        const res = await fetch(`/api/user/favorites/${songId}`, { method: 'DELETE' });
        if (!res.ok) {
          // N·∫øu c√≥ l·ªói, tr·∫£ l·∫°i tr·∫°ng th√°i c≈©
          setIsFavorited(true);
          alert("C√≥ l·ªói x·∫£y ra, vui l√≤ng th·ª≠ l·∫°i.");
        }
      });
    }
  };

  return (
    <button onClick={handleFavorite} disabled={isPending} style={{ background: 'none', border: 'none', cursor: 'pointer', fontSize: '2rem' }}>
      {isFavorited ? '‚ù§Ô∏è' : 'ü§ç'}
    </button>
  );
}